name: zilla-mndwrk

telemetry:
  metrics:
    - http.request.size
    - http.response.size
    - stream.opens.sent
    - stream.closes.sent
    
  exporters:
    stdout_logs_exporter:
      type: stdout
    prometheus_metric_exporter:
      type: prometheus
      options:
        endpoints:
          - scheme: http
            path: /metrics
            port: 7190

catalogs:
  schema-registry:
    type: karapace
    options: 
      url: ${env.SCHEMA_REGISTRY_URL} 
      context: default

bindings:
  mndwrk_tcp_server:
    type: tcp
    kind: server
    options:
      host: 0.0.0.0
      port: 8080
    exit: mndwrk_http_server
    telemetry:
      metrics:
        - http.*
  
  mndwrk_http_server:
    type: http
    kind: server
    routes:
      - when:
          - headers:
              :scheme: http
              :authority: localhost:8080
        exit: mndwrk_sensor_service
    telemetry:
      metrics:
        - http.*

  mndwrk_sensor_service:
    type: http-kafka
    kind: proxy
    telemetry:
      metrics:
        - http.*
    routes:
      - when:
          - method: POST
            path: /api/v1/sensor-data
        exit: mndwrk_kafka_cache_client
        with:
          capability: produce
          topic: mndwrk-zilla-request
          key: ${idempotencyKey}
      - when:
          - method: GET
            path: /api/v1/sensor-data/${idempotencyKey}
        exit: mndwrk_kafka_cache_client
        with:
          capability: fetch
          topic: mndwrk-zilla-response
          merge:
            content-type: application/json

  mndwrk_kafka_cache_client:
    type: kafka
    kind: cache_client
    exit: mndwrk_kafka_cache_server
  mndwrk_kafka_cache_server:
    type: kafka
    kind: cache_server
    telemetry:
      metrics:
        - http.*
    options:
      bootstrap:
        - mndwrk-zilla-response
    exit: mndwrk_kafka_client
  mndwrk_kafka_client:
    type: kafka
    kind: client
    telemetry:
      metrics:
        - http.*
    options:
      servers:
        - ${{env.KAFKA_BOOTSTRAP_SERVER}}
    exit: mndwrk_kafka_tcp_client
  mndwrk_kafka_tcp_client:
    type: tcp
    kind: client
    telemetry:
      metrics:
        - http.*
    options:
      host: ${{env.KAFKA_HOST}}
      port: ${{env.KAFKA_PORT}}
    routes:
      - when:
          - cidr: 0.0.0.0/0