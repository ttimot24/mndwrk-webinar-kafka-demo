/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.mndwrk.webinar.demo.ksqldb;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroProducedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -441757193383437291L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroProducedEvent\",\"namespace\":\"com.mndwrk.webinar.demo.ksqldb\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"summary\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"processedBy\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"detectedAt\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null}],\"connect.name\":\"com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<AvroProducedEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroProducedEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroProducedEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroProducedEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroProducedEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroProducedEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroProducedEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroProducedEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroProducedEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence uuid;
  private java.lang.CharSequence source;
  private java.lang.CharSequence summary;
  private java.lang.CharSequence processedBy;
  private java.time.Instant detectedAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroProducedEvent() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param source The new value for source
   * @param summary The new value for summary
   * @param processedBy The new value for processedBy
   * @param detectedAt The new value for detectedAt
   */
  public AvroProducedEvent(java.lang.CharSequence uuid, java.lang.CharSequence source, java.lang.CharSequence summary, java.lang.CharSequence processedBy, java.time.Instant detectedAt) {
    this.uuid = uuid;
    this.source = source;
    this.summary = summary;
    this.processedBy = processedBy;
    this.detectedAt = detectedAt;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return source;
    case 2: return summary;
    case 3: return processedBy;
    case 4: return detectedAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.CharSequence)value$; break;
    case 1: source = (java.lang.CharSequence)value$; break;
    case 2: summary = (java.lang.CharSequence)value$; break;
    case 3: processedBy = (java.lang.CharSequence)value$; break;
    case 4: detectedAt = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }


  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return The value of the 'summary' field.
   */
  public java.lang.CharSequence getSummary() {
    return summary;
  }


  /**
   * Sets the value of the 'summary' field.
   * @param value the value to set.
   */
  public void setSummary(java.lang.CharSequence value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'processedBy' field.
   * @return The value of the 'processedBy' field.
   */
  public java.lang.CharSequence getProcessedBy() {
    return processedBy;
  }


  /**
   * Sets the value of the 'processedBy' field.
   * @param value the value to set.
   */
  public void setProcessedBy(java.lang.CharSequence value) {
    this.processedBy = value;
  }

  /**
   * Gets the value of the 'detectedAt' field.
   * @return The value of the 'detectedAt' field.
   */
  public java.time.Instant getDetectedAt() {
    return detectedAt;
  }


  /**
   * Sets the value of the 'detectedAt' field.
   * @param value the value to set.
   */
  public void setDetectedAt(java.time.Instant value) {
    this.detectedAt = value;
  }

  /**
   * Creates a new AvroProducedEvent RecordBuilder.
   * @return A new AvroProducedEvent RecordBuilder
   */
  public static com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder newBuilder() {
    return new com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder();
  }

  /**
   * Creates a new AvroProducedEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroProducedEvent RecordBuilder
   */
  public static com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder newBuilder(com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder other) {
    if (other == null) {
      return new com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder();
    } else {
      return new com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder(other);
    }
  }

  /**
   * Creates a new AvroProducedEvent RecordBuilder by copying an existing AvroProducedEvent instance.
   * @param other The existing instance to copy.
   * @return A new AvroProducedEvent RecordBuilder
   */
  public static com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder newBuilder(com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent other) {
    if (other == null) {
      return new com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder();
    } else {
      return new com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroProducedEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroProducedEvent>
    implements org.apache.avro.data.RecordBuilder<AvroProducedEvent> {

    private java.lang.CharSequence uuid;
    private java.lang.CharSequence source;
    private java.lang.CharSequence summary;
    private java.lang.CharSequence processedBy;
    private java.time.Instant detectedAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.summary)) {
        this.summary = data().deepCopy(fields()[2].schema(), other.summary);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.processedBy)) {
        this.processedBy = data().deepCopy(fields()[3].schema(), other.processedBy);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.detectedAt)) {
        this.detectedAt = data().deepCopy(fields()[4].schema(), other.detectedAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroProducedEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.summary)) {
        this.summary = data().deepCopy(fields()[2].schema(), other.summary);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.processedBy)) {
        this.processedBy = data().deepCopy(fields()[3].schema(), other.processedBy);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.detectedAt)) {
        this.detectedAt = data().deepCopy(fields()[4].schema(), other.detectedAt);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }


    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder clearSource() {
      source = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * @return The value.
      */
    public java.lang.CharSequence getSummary() {
      return summary;
    }


    /**
      * Sets the value of the 'summary' field.
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder setSummary(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.summary = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'summary' field.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder clearSummary() {
      summary = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'processedBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getProcessedBy() {
      return processedBy;
    }


    /**
      * Sets the value of the 'processedBy' field.
      * @param value The value of 'processedBy'.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder setProcessedBy(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.processedBy = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'processedBy' field has been set.
      * @return True if the 'processedBy' field has been set, false otherwise.
      */
    public boolean hasProcessedBy() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'processedBy' field.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder clearProcessedBy() {
      processedBy = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'detectedAt' field.
      * @return The value.
      */
    public java.time.Instant getDetectedAt() {
      return detectedAt;
    }


    /**
      * Sets the value of the 'detectedAt' field.
      * @param value The value of 'detectedAt'.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder setDetectedAt(java.time.Instant value) {
      validate(fields()[4], value);
      this.detectedAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'detectedAt' field has been set.
      * @return True if the 'detectedAt' field has been set, false otherwise.
      */
    public boolean hasDetectedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'detectedAt' field.
      * @return This builder.
      */
    public com.mndwrk.webinar.demo.ksqldb.AvroProducedEvent.Builder clearDetectedAt() {
      detectedAt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroProducedEvent build() {
      try {
        AvroProducedEvent record = new AvroProducedEvent();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source = fieldSetFlags()[1] ? this.source : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.summary = fieldSetFlags()[2] ? this.summary : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.processedBy = fieldSetFlags()[3] ? this.processedBy : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.detectedAt = fieldSetFlags()[4] ? this.detectedAt : (java.time.Instant) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroProducedEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroProducedEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroProducedEvent>
    READER$ = (org.apache.avro.io.DatumReader<AvroProducedEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










